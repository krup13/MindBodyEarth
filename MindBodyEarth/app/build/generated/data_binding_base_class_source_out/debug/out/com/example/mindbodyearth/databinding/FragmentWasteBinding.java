// Generated by view binder compiler. Do not edit!
package com.example.mindbodyearth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mindbodyearth.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWasteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button calculateButton;

  @NonNull
  public final TextView footprintResultTextView;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final EditText recyclingRateEditText;

  @NonNull
  public final TextView textView;

  @NonNull
  public final EditText wasteGeneratedEditText;

  private FragmentWasteBinding(@NonNull ConstraintLayout rootView, @NonNull Button calculateButton,
      @NonNull TextView footprintResultTextView, @NonNull ConstraintLayout linearLayout,
      @NonNull EditText recyclingRateEditText, @NonNull TextView textView,
      @NonNull EditText wasteGeneratedEditText) {
    this.rootView = rootView;
    this.calculateButton = calculateButton;
    this.footprintResultTextView = footprintResultTextView;
    this.linearLayout = linearLayout;
    this.recyclingRateEditText = recyclingRateEditText;
    this.textView = textView;
    this.wasteGeneratedEditText = wasteGeneratedEditText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWasteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWasteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_waste, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWasteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calculateButton;
      Button calculateButton = ViewBindings.findChildViewById(rootView, id);
      if (calculateButton == null) {
        break missingId;
      }

      id = R.id.footprintResultTextView;
      TextView footprintResultTextView = ViewBindings.findChildViewById(rootView, id);
      if (footprintResultTextView == null) {
        break missingId;
      }

      ConstraintLayout linearLayout = (ConstraintLayout) rootView;

      id = R.id.recyclingRateEditText;
      EditText recyclingRateEditText = ViewBindings.findChildViewById(rootView, id);
      if (recyclingRateEditText == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.wasteGeneratedEditText;
      EditText wasteGeneratedEditText = ViewBindings.findChildViewById(rootView, id);
      if (wasteGeneratedEditText == null) {
        break missingId;
      }

      return new FragmentWasteBinding((ConstraintLayout) rootView, calculateButton,
          footprintResultTextView, linearLayout, recyclingRateEditText, textView,
          wasteGeneratedEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
