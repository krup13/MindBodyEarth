// Generated by view binder compiler. Do not edit!
package com.example.mindbodyearth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mindbodyearth.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTransportationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button calculateButton;

  @NonNull
  public final EditText distanceTravelledEditText;

  @NonNull
  public final EditText fuelEfficiencyEditText;

  @NonNull
  public final ConstraintLayout linearLayout2;

  @NonNull
  public final EditText modeOfTransportEditText;

  @NonNull
  public final TextView resultTextView;

  @NonNull
  public final TextView textView2;

  private FragmentTransportationBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button calculateButton, @NonNull EditText distanceTravelledEditText,
      @NonNull EditText fuelEfficiencyEditText, @NonNull ConstraintLayout linearLayout2,
      @NonNull EditText modeOfTransportEditText, @NonNull TextView resultTextView,
      @NonNull TextView textView2) {
    this.rootView = rootView;
    this.calculateButton = calculateButton;
    this.distanceTravelledEditText = distanceTravelledEditText;
    this.fuelEfficiencyEditText = fuelEfficiencyEditText;
    this.linearLayout2 = linearLayout2;
    this.modeOfTransportEditText = modeOfTransportEditText;
    this.resultTextView = resultTextView;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTransportationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTransportationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_transportation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTransportationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calculateButton;
      Button calculateButton = ViewBindings.findChildViewById(rootView, id);
      if (calculateButton == null) {
        break missingId;
      }

      id = R.id.distanceTravelledEditText;
      EditText distanceTravelledEditText = ViewBindings.findChildViewById(rootView, id);
      if (distanceTravelledEditText == null) {
        break missingId;
      }

      id = R.id.fuelEfficiencyEditText;
      EditText fuelEfficiencyEditText = ViewBindings.findChildViewById(rootView, id);
      if (fuelEfficiencyEditText == null) {
        break missingId;
      }

      ConstraintLayout linearLayout2 = (ConstraintLayout) rootView;

      id = R.id.modeOfTransportEditText;
      EditText modeOfTransportEditText = ViewBindings.findChildViewById(rootView, id);
      if (modeOfTransportEditText == null) {
        break missingId;
      }

      id = R.id.resultTextView;
      TextView resultTextView = ViewBindings.findChildViewById(rootView, id);
      if (resultTextView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new FragmentTransportationBinding((ConstraintLayout) rootView, calculateButton,
          distanceTravelledEditText, fuelEfficiencyEditText, linearLayout2, modeOfTransportEditText,
          resultTextView, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
